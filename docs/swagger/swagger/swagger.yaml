swagger: "2.0"
info:
  version: "1.0.0"
  title: COM.LY API
basePath: /v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

paths:
  /user/login:
    post:
      summary: Login user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: credentials
          description: User's login credentials
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
            required:
              - username
              - password
      responses:
        '200':
          description: Successful login
        '401':
          description: Invalid credentials

  /user/register:
    post:
      summary: Register user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: User's registration details
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
              email:
                type: string
            required:
              - username
              - password
              - email
      responses:
        '200':
          description: Successful registration
        '400':
          description: Invalid registration data

  /user:
    get:
      summary: Get user
      tags:
        - User
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Access token
          type: string
          required: true
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorized
    put:
      summary: Update user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Access token
          type: string
          required: true
        - in: body
          name: user
          description: User's updated details
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
              email:
                type: string
            required:
              - username
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid user data
        '401':
          description: Unauthorized


  /user/all:
    get:
      summary: Get all users
      tags:
        - User
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Access token
          type: string
          required: true
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorized
    
  /status:
    post:
      summary: Create status
      tags:
        - Status
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Access token
          type: string
          required: true
        - in: body
          name: status
          description: Status to be created
          schema:
            type: object
            properties:
              text:
                type: string
            required:
              - text
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid status data
        '401':
          description: Unauthorized

    get:
      summary: Get status
      tags:
        - Status
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Access token
          type: string
          required: true
        - in: query
          name: id
          description: Status ID
          type: integer
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorized
    delete:
      summary: Delete status
      tags:
        - Status
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Access token
          type: string
          required: true
        - in: query
          name: id
          description: Status ID
          type: integer
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorized

  /status/all:
    get:
      summary: Get all statuses
      tags:
        - Status
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Access token
          type: string
          required: true
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorized
    
  /conversation:
    post:
      summary: Create conversation
      tags:
        - Conversation
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Access token
          type: string
          required: true
        - in: body
          name: conversation
          description: Conversation to be created
          schema:
            type: object
            properties:
              name:
                type: string
              members:
                type: array
                items:
                  type: integer
            required:
              - name
              - members
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid conversation data
        '401':
          description: Unauthorized

    get:
      summary: Get conversation
      tags:
        - Conversation
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Access token
          type: string
          required: true
        - in: query
          name: id
          description: Conversation ID
          type: integer
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorized

  /conversation/all:
    get:
      summary: Get all conversations related to user
      tags:
        - Conversation
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Access token
          type: string
          required: true
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorized

  /conversation/user/all:
    get:
      summary: Get all users in all conversations
      tags:
        - Conversation
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Access token
          type: string
          required: true
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorized

  /conversation/name:
    put:
      summary: Update conversation name
      tags:
        - Conversation
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Access token
          type: string
          required: true
        - in: body
          name: conversation
          description: Conversation's updated name
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
            required:
              - id
              - name
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid conversation data
        '401':
          description: Unauthorized
  /v1/message:
    post:
      summary: Create a new message
      description: Use this endpoint to create a new message in a conversation
      responses:
        200:
          description: Message created successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized request
    get:
      summary: Get message
      description: Use this endpoint to retrieve a specific message
      parameters:
        - in: query
          name: message_id
          type: string
          required: true
          description: ID of the message to retrieve
      responses:
        200:
          description: Message retrieved successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized request
  
  /v1/message/conversation/all:
    get:
      summary: Get all messages in a conversation
      description: Use this endpoint to retrieve all messages in a conversation
      parameters:
        - in: query
          name: conversation_id
          type: string
          required: true
          description: ID of the conversation to retrieve messages from
      responses:
        200:
          description: Messages retrieved successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized request
  
  /v1/photo:
    post:
      summary: Upload a photo
      description: Use this endpoint to upload a photo
      responses:
        200:
          description: Photo uploaded successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized request
    get:
      summary: Download a photo
      description: Use this endpoint to download a photo
      parameters:
        - in: query
          name: photo_id
          type: string
          required: true
          description: ID of the photo to download
      responses:
        200:
          description: Photo downloaded successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized request

